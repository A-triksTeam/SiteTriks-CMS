@model SiteTriks.Models.Libraries.EditLibraryViewModel

@{
    ViewBag.Title = "Edit Library";
}

@section Styles {
    <link href="~/css/navbar-remove.css" rel="stylesheet" />
}

<div class="backend-wrapper">
    @using (Html.BeginForm())
    {

        <div class="fixed-top-2">
            @await Html.PartialAsync("SecondNavHeader")

            <a href="@Url.Action("Index")" class="btn-nav-2"><span class="st-icon-return-to-list"></span>Cancel</a>
            <input type="submit" value="Save & Exit" class="btn-nav-2" />
        </div>

        @Html.AntiForgeryToken()

        <div class="page-properties">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group row">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control inline-block", id = "input-name" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Prefix, "Url Prefix", htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.DisplayFor(model => model.Prefix, new { htmlAttributes = new { @class = "form-control", id = "input-prefix" } })
                @Html.ValidationMessageFor(model => model.Prefix, "", new { @class = "text-danger" })
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.StorageProviderName, "Url Prefix", htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.DisplayFor(model => model.StorageProviderName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StorageProviderName, "", new { @class = "text-danger" })
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => Model.Tags, htmlAttributes: new { @class = "control-label col-xs-2" })
                @Html.EditorFor(model => Model.Tags, new { htmlAttributes = new { @class = "form-control inline-block", id = "tags" } })
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.SelectedThumbailSizes, new { @class = "control-label col-xs-2" })
                <div class="clearme"></div>
                @{
                    var dropdownList = new List<SelectListItem>();
                    foreach (var item in Model.ThumbnailsSizes)
                    {
                        dropdownList.Add(new SelectListItem { Text = item.Name, Value = item.Id.ToString(), Selected = Model.SelectedThumbailSizes.Contains(item.Id) });
                    }
                }
                @Html.ListBoxFor(model => Model.SelectedThumbailSizes, dropdownList, new { @class = "form-control multiselect-thumbnails" })
                @Html.ValidationMessageFor(model => model.SelectedThumbailSizes, "", new { @class = "text-warning" })
            </div>
        </div>
    }
</div>

@section scripts{
    <script src="~/js/tags.js"></script>
    <script src="~/js/multiselect-setup.js"></script>
    <script src="~/js/sitetriks/libraries.js"></script>
    <script src="~/js/validator.js"></script>
    <script>
        (function () {
            Tags.init();

            editLibraries('@Url.Action("IsNameAvaliable", "Libraries")', '@Model.Id');
        })();
    </script>
}
