@model SiteTriks.Models.Libraries.CreateLibraryViewModel

@{
    ViewBag.Title = "Create Library";
}

@section Styles {
    <link href="~/css/navbar-remove.css" rel="stylesheet" />
}

<div class="backend-wrapper">
    @using (Html.BeginForm("Create", "Libraries", FormMethod.Post, new { id = "create-library-form" }))
    {

        <div class="fixed-top-2">
            @await Html.PartialAsync("SecondNavHeader")

            <a href="@Url.Action("Index")" class="btn-nav-2"><span class="st-icon-return-to-list"></span>Cancel</a>
            <button type="submit" id="submit" class="btn-nav-2">Save & Exit</button>
        </div>
        @Html.AntiForgeryToken()

        <div class="page-properties">
            <hr />
            <span>@ViewBag.Message</span>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group row">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control inline-block", id = "input-name" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Prefix, "Url Prefix", htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Prefix, new { htmlAttributes = new { @class = "form-control inline-block", id = "input-prefix" } })
                @Html.ValidationMessageFor(model => model.Prefix, "", new { @class = "text-danger" })
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.StorageProviderName, "Storage Provider Name", htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.DropDownListFor(model => model.StorageProviderName, Model.StorageProviders.Select(sp => new SelectListItem() { Text = sp, Value = sp }), new { @class = "form-control inline-block" })
                @Html.ValidationMessageFor(model => model.Prefix, "", new { @class = "text-danger" })
                <strong><span id="validation-prefix" class="text-danger"></span></strong>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.AllowedTypes, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.DropDownListFor(model => model.AllowedTypes, new List<SelectListItem>() {
                                                                   new SelectListItem() { Text= "Image",Value = "0"},
                                                                   new SelectListItem() { Text= "Document",Value = "1"},
                                                                   new SelectListItem() { Text= "Video",Value = "3"},
                                                                   new SelectListItem() { Text= "Svg",Value = "4"}
                                                               }, new { @class = "form-control inline-block", id="library-type" })
                @Html.ValidationMessageFor(model => model.AllowedTypes, "", new { @class = "text-danger" })
                <span id="allowed-types"></span>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.SelectedThumbailSizes, new { @class = "control-label col-xs-2" })
                <div class="clearme"></div>
                @{
                    var dropdownList = new List<SelectListItem>();
                    foreach (var item in Model.ThumbnailsSizes)
                    {
                        dropdownList.Add(new SelectListItem { Text = item.Name, Value = item.Id.ToString() });
                    }
                }
                @Html.ListBoxFor(model => Model.SelectedThumbailSizes, dropdownList, new { @class = "form-control multiselect-thumbnails", id = "multiselect-roles" })
                @Html.ValidationMessageFor(model => model.SelectedThumbailSizes, "", new { @class = "text-warning" })
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => Model.Tags, htmlAttributes: new { @class = "control-label col-xs-2" })
                @Html.EditorFor(model => Model.Tags, new { htmlAttributes = new { @class = "form-control inline-block", id = "tags" } })
            </div>
        </div>
    }
</div>

@section scripts{
    <script src="~/js/tags.js"></script>
    <script src="~/js/multiselect-setup.js"></script>
    <script src="~/js/sitetriks/libraries.js"></script>
    <script src="~/js/validator.js"></script>
    <script>
        $(document).ready(function () {
            Tags.init();

            createLibrary('@Url.Action("ValidateUrl", "Pages")', '@Url.Action("IsNameAvaliable", "Libraries")');
        });
    </script>
}
