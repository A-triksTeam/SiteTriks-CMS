@model SiteTriks.Models.Permission.PermissionWithRolesViewModel
@{
    ViewBag.Title = "Permissions";
}


<div class="backend-wrapper">
    @using (Html.BeginForm("Edit", "Permission", FormMethod.Post, new { id = "permission-form" }))
    {
        <div class="fixed-top-2">
            @await Html.PartialAsync("SecondNavHeader")

            <a href="@Url.Action("Index")" class="btn-nav-2"><span class="st-icon-return-to-list"></span>Back</a>
            <input id="btnSubmit" type="submit" value="Save & Exit" class="btn-nav-2" />
        </div>

        <h3>Controller name:@Model.System </h3>
        <h3>Action name: @Model.Action</h3>

        <h3>Roles:</h3>
        <div class="row">
            <div class="col-md-3">
                <h5>All roles</h5>
                <select class="all-permissions-select col-md-12" multiple>
                    @foreach (var role in Model.AllRoles)
                    {
                        <option value="@role.Name">@role.Name</option>
                    }
                </select>
            </div>
            <div class="col-md-3">
                <h5></h5>
                <a class="btn move-to-right center-block">
                    <i class="fa fa-arrow-right" aria-hidden="true"></i>
                </a>
                <a class="btn move-to-left center-block">
                    <i class="fa fa-arrow-left" aria-hidden="true"></i>
                </a>
            </div>
            <div class="col-md-3">
                <h5>Selected roles</h5>
                <select class="permissions-to-role-select col-md-12" multiple>
                    @foreach (var role in Model.CurrentRoles)
                    {
                        <option value="@role.Name">@role.Name</option>
                    }
                </select>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script src="~/js/leaving-warning.js"></script>
    <script>
        editPermission('@Model.Id')
        function editPermission(id) {
            $('.move-to-right').on('click', function () {
                $('.all-permissions-select option:selected').each(function (_, element) {
                    $(element).remove();
                    $('.permissions-to-role-select').append($('<option>', {
                        value: element.value,
                        text: element.value
                    }));
                });
            });

            $('.move-to-left').on('click', function () {
                $('.permissions-to-role-select option:selected').each(function (_, element) {
                    $(element).remove();
                    $('.all-permissions-select').append($('<option>', {
                        value: element.value,
                        text: element.value
                    }));
                });

            });

            function getAllRoles() {
                var roles = [];
                $('.permissions-to-role-select option').each(function (_,element) {
                    roles.push(element.value);
                });

                return roles;
            }

            $('#permission-form').on('submit', function (ev) {
                ev.preventDefault();

                var model = {
                    id: id,
                    roles: getAllRoles()
                };

                Data.postJson({ url: this.action, data: model }).then(function (res) {
                    Notifier.createAlert({ containerId: '#alerts', title: 'Success!', message: 'Permission was edited successfully', status: 'success' });
                    if (res && res.success) {
                        window.location.replace('/sitetriks/permission');
                        return;
                    }

                    Notification.createAlert({ containerId: '#alerts', message: res.message || 'Something went wrong', status: 'danger' })
                }, Data.defaultError);

                return false;
            });
        }
    </script>
}