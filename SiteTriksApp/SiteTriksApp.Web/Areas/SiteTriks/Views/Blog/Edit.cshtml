@model SiteTriks.BlogModule.Models.Blog.BlogPostViewModel

@{
    ViewBag.Title = "Edit Blog Post";
}

@section Styles {
    <link href="~/css/navbar-remove.css" rel="stylesheet" />
}

<div class="backend-wrapper">
    @using (Html.BeginForm(FormMethod.Post, new { id = "edit-blog-form" }))
    {
        @Html.AntiForgeryToken()

        <div class="fixed-top-2">
            @await Html.PartialAsync("SecondNavHeader")

            <a href="@Url.Action("Index")" class="btn-nav-2"><span class="st-icon-return-to-list"></span>Cancel</a>
            <input type="submit" value="Save & Exit" class="btn-nav-2" />
        </div>

        <div class="page-properties">
            <hr />
            @Html.HiddenFor(model => model.Id)

            <div class="form-group row">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control inline-block validate", data_validation_type = "required length", data_min = "3" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>

            <div class="form-group row description-row">
                @Html.LabelFor(model => model.Summary, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Summary, new { @class = "form-control", id = "summary-area" })
                    @Html.ValidationMessageFor(model => model.Summary, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group row description-row">
                @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Content, new { @class = "form-control", id = "content-area" })
                    @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    }
</div>

@section scripts{
    <script type="text/javascript" src="~/lib/custom/tinymce/tinymce.min.js"></script>
    <script type="text/javascript" src="~/js/validator.js"></script>
    <script type="text/javascript" src="~/js/text-editor.js"></script>
    <script type="text/javascript" src="~/js/sitetriks/discussions.js"></script>
    <script type="text/javascript">
        (function () {
            textEditor.init('#summary-area', 500, 150);
            textEditor.init('#content-area', 500, 300);

            setupAjaxForm('#edit-blog-form', '/sitetriks/blog');
            WarningWindow.attach();
        })();
    </script>
}
