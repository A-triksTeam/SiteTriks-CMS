@using System.Security.Claims;

@model SiteTriks.BlogModule.Models.Blog.DetailedBlogPostViewModel

@{
    ViewBag.Title = "Blog Post Details";
}

@section Styles {
    <link href="~/css/navbar-remove.css" rel="stylesheet" />
}

<div class="fixed-top-2">
    @await Html.PartialAsync("SecondNavHeader")

    <a href="@Url.Action("Index")" class="btn-nav-2"><span class="st-icon-return-to-list"></span>Cancel</a>
    <a href="@Url.Action("Edit", new { id = Model.Id })" class="btn-nav-2">Edit</a>
    <a href="@Url.Action("Delete", new { id = Model.Id })" class="btn-nav-2">Delete</a>
</div>

<div class="backend-wrapper">
    <hr />
    <div>
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.DateCreated)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DateCreated)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Title)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Title)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Content)
        </dt>

        <dd>
            @Html.Raw(Model.Content)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Creator)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Creator)
        </dd>

    </dl>
    </div>

    <div class="blog-contents">
        <div id="comments">
            @if (Model.Comments.Count > 0)
            {
                var claimsIdentity = User.Identity as ClaimsIdentity;
                string userId = string.Empty;
                if (claimsIdentity != null)
                {
                    var userIdClaim = claimsIdentity.Claims
                        .FirstOrDefault(x => x.Type == ClaimTypes.NameIdentifier);

                    if (userIdClaim != null)
                    {
                        userId = userIdClaim.Value;
                    }
                }

                <h3>Comments</h3>
                <div id="comments-container">
                    @foreach (var item in Model.Comments.OrderBy(c => c.DateCreated))
                {
                        @Html.DisplayFor(c => item, new { userId = userId })
                    }
                </div>
            }
            else
            {
                <div class="space30"></div>
                <div id="comments-container">
                </div>
            }
        </div>
        <hr />
        <textarea id="comment-area"></textarea>
        <a id="btn-comment" class="btn btn-success">Comment</a>
    </div>
</div>

@section scripts{
    <script src='https://cloud.tinymce.com/stable/tinymce.min.js'></script>
    <script src="~/js/text-editor.js"></script>
    <script src="~/js/comments.js" type="text/javascript"></script>
    <script type="text/javascript">
        initComments('@Model.Id');
    </script>
}
