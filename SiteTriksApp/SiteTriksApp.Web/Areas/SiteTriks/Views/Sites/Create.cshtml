@model SiteTriks.Models.Sites.CreateSiteViewModel

@{
    ViewBag.Title = "Create Site";
}

@section Styles {
    <link href="~/css/navbar-remove.css" rel="stylesheet" />
}

<div class="backend-wrapper">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="fixed-top-2">
            @await Html.PartialAsync("SecondNavHeader")

            <a href="@Url.Action("Index")" class="btn-nav-2"><span class="st-icon-return-to-list"></span>Cancel</a>
            <button type="submit" id="submit" class="btn-nav-2">Save & Exit</button>
        </div>

        <div class="form-horizontal">
            <h4>CreateSiteViewModel</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Domain, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Domain, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Domain, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
    }
</div>
@section Scripts {

    <script>
        WarningWindow.attach();
        $('input[type="submit"]').on('click', function () {            
            alert("The domain name must be valid or the site won't be created and the page will refresh.");
        });
    </script>
}
