@model SiteTriks.Models.ThumbnailsSizesModels.CreateEditThumbnailsSizesViewModel

@{
    ViewBag.Title = Model.Name;
}

@section Styles {
    <link href="~/css/navbar-remove.css" rel="stylesheet" />
}

<div class="backend-wrapper">
    @using (Html.BeginForm("CreateEdit", "ThumbnailsSizes", FormMethod.Post, new { id = "form-create-edit" }))
    {
        @Html.AntiForgeryToken()

        <div class="fixed-top-2">
            @await Html.PartialAsync("SecondNavHeader")

            <a href="@Url.Action("Index")" class="btn-nav-2"><span class="st-icon-return-to-list"></span>Cancel</a>
            <input type="submit" value="Save" class="btn-nav-2" />
        </div>

        <div class="form-horizontal">
            <h4>@Model.Name</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", id = "size-name" } })
                    <span class="text-danger"></span>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.DropDownListFor(model => model.Type, new List<SelectListItem>() {
                                                                   new SelectListItem() { Text= "Resize",Value = "0"},
                                                                   new SelectListItem() { Text= "Crop",Value = "1"},
                                                               }, new { @class = "form-control inline-block", id="size-type" })
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                <span id="allowed-types"></span>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Width, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Width, new { htmlAttributes = new { @class = "form-control", id = "size-width" } })
                    <span class="text-danger"></span>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Height, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Height, new { htmlAttributes = new { @class = "form-control", id = "size-height" } })
                    <span class="text-danger"></span>
                </div>
            </div>
            <div class="offsets">
                <div class="form-group">
                    @Html.LabelFor(model => model.OffsetX, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.OffsetX, new { htmlAttributes = new { @class = "form-control", id = "offsetx" } })
                        <span class="text-danger"></span>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.OffsetY, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.OffsetY, new { htmlAttributes = new { @class = "form-control", id = "offsety" } })
                        <span class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MultiplyerX, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MultiplyerX, new { htmlAttributes = new { @class = "form-control ratio", id = "multiplierx", @type = "number", @step = "0.01" } })
                    <span class="text-danger"></span>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.MultiplyerY, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MultiplyerY, new { htmlAttributes = new { @class = "form-control ratio", id = "multipliery", @type = "number", @step = "0.01" } })
                    <span class="text-danger"></span>
                </div>
            </div>
        </div>
    }
</div>


@section scripts{
    <script type="text/javascript" src="~/js/sitetriks/thumbnailSizes.js"></script>
    <script type="text/javascript">
        createEditThumbnailSize('@Model.Id');
    </script>
}

