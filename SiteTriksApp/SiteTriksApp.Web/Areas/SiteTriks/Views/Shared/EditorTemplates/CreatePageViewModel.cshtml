@model SiteTriks.Models.Pages.CreatePageMainViewModel

@{
    Model.PageViewModel.IsInNavigation = true;
}

<div class="page-properties">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => Model.PageViewModel.EnId)

    <div class="form-group row">
        @Html.LabelFor(model => Model.PageViewModel.EnTitle, "Title", htmlAttributes: new { @class = "control-label col-md-2" })
        @Html.EditorFor(model => Model.PageViewModel.EnTitle, new { htmlAttributes = new { @class = "form-control title-field inline-block", id = "title" } })
        <span class="text-danger"></span>
    </div>

    <div class="form-group row description-row">
        @Html.LabelFor(model => Model.PageViewModel.EnDescription, "Description", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(m => Model.PageViewModel.EnDescription, htmlAttributes: new { @class = "form-control content-field" })
            @Html.ValidationMessageFor(model => Model.PageViewModel.EnDescription, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        @Html.LabelFor(model => Model.PageViewModel.Url, htmlAttributes: new { @class = "control-label col-xs-2" })
        @Html.EditorFor(model => Model.PageViewModel.Url, new { htmlAttributes = new { @class = "form-control inline-block", Id = "url" } })
        <span id="url-validation" class="text-danger"></span>
    </div>

    <div class="form-group row" hidden>
        @Html.LabelFor(model => Model.PageViewModel.NavigationPriority, "Navigation priority", htmlAttributes: new { @class = "control-label col-xs-2" })
        @Html.EditorFor(model => Model.PageViewModel.NavigationPriority, new { htmlAttributes = new { @class = "form-control", min = 0, max = 1000 } })
        @Html.ValidationMessageFor(model => Model.PageViewModel.NavigationPriority, "", new { @class = "text-danger" })
    </div>

    <div class="form-group row">
        @Html.LabelFor(model => Model.PageViewModel.IsInNavigation, "In navigation", htmlAttributes: new { @class = "control-label col-xs-2" })
        @Html.EditorFor(model => Model.PageViewModel.IsInNavigation, new { htmlAttributes = new { @class = "custom-checkbox" } })
        @Html.ValidationMessageFor(model => Model.PageViewModel.IsInNavigation, "", new { @class = "text-danger" })
    </div>

    <div class="form-group row">
        @Html.LabelFor(model => Model.PageViewModel.IsStaticPage, "Static Page", htmlAttributes: new { @class = "control-label col-xs-2" })
        @Html.EditorFor(model => Model.PageViewModel.IsStaticPage, new { htmlAttributes = new { @class = "custom-checkbox" } })
        @Html.ValidationMessageFor(model => Model.PageViewModel.IsStaticPage, "", new { @class = "text-danger" })
    </div>

    <div class="form-group row">
        @Html.LabelFor(model => Model.PageViewModel.ParentId, "Parent page", htmlAttributes: new { @class = "control-label col-xs-2" })
        @Html.DropDownListFor(model => Model.PageViewModel.ParentId, new SelectList(Model.ParentList, "Id", "Title"), new { @class = "form-control" })
    </div>

    <div class="form-group row">
        @Html.LabelFor(model => Model.PageViewModel.PageTemplateMetaId, "Template page", htmlAttributes: new { @class = "control-label col-xs-2" })
        @Html.DropDownListFor(model => Model.PageViewModel.PageTemplateMetaId, new SelectList(Model.PageTemplateList, "Id", "Title"), new { @class = "form-control" })
    </div>

    <div class="form-group row">
        @Html.LabelFor(model => Model.PageViewModel.SEOKeyword, "SEO Keywords", htmlAttributes: new { @class = "control-label col-xs-2" })
        @Html.EditorFor(model => Model.PageViewModel.SEOKeyword, new { htmlAttributes = new { @class = "form-control inline-block", id = "seo-words", placeholder = "The keywords should be separate by comma!" } })
        <span id="seo-words-counter"></span>
    </div>


    <div class="form-group row">
        @Html.LabelFor(model => model.Roles, new { @class = "control-label col-xs-2" })
        @Html.ListBoxFor(model => Model.RoleIds, Model.Roles, new { @class = "form-control inline-block multiselect-roles" })
        @Html.ValidationMessageFor(model => model.Roles, "", new { @class = "text-warning" })
    </div>

    <div class="form-group row">
        @Html.LabelFor(model => Model.PageViewModel.EnDateToBePublished, "Published date", htmlAttributes: new { @class = "control-label col-xs-2" })
        <div class="dtb-container">

            <div class="input-group date-picker-group">
                @Html.EditorFor(model => Model.PageViewModel.EnDateToBePublished, new { htmlAttributes = new { @class = "form-control", id = "date-picker", type = "text" } })
                <span class="input-group-addon">
                    <i class="fa fa-calendar-o" aria-hidden="true"></i>
                </span>
            </div>
            @Html.ValidationMessageFor(model => Model.PageViewModel.EnDateToBePublished, "", new { @class = "text-danger" })
        </div>
    </div>
</div>
