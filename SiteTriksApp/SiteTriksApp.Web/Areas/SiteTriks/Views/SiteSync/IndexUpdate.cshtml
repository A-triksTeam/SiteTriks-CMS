@model SiteTriks.SiteSync.Models.SiteSyncDisplayModel

@{
    ViewBag.Title = "SiteSync";
}

<div class="fixed-top-2">
    @await Html.PartialAsync("SecondNavHeader")
</div>

<link href="~/css/site-sync.css" rel="stylesheet" type="text/css">

<div class="backend-wrapper">
    <div class="site-sync-target-section">
        <h2>1.Select destination instance and click on the connect button  <i class="fa fa-power-off" aria-hidden="true"></i> </h2>
        <div class="row">
            <div class="current col col-lg-5 col-xs-5">
                <div class="section-title">Source</div>
                <div class="box">
                    <div class="centered-title">@Model.CurrentDomain</div>
                </div>
            </div>
            <div class="col col-lg-2 col-xs-2 arrow-container">
                <div class="sitesync-arrow"></div>
                <div class="sitesync-arrow-triangle"></div>
            </div>
            <div class="targets col col-lg-5 col-xs-5">
                <div class="target-box">
                    <div class="section-title">Destination</div>
                    <select id="targets-select">
                        <option value="0">Select a target</option>
                        @foreach (var item in Model.SiteSyncTargets)
                        {
                            <option data-id="@item.Id" value="@item.Url">@item.Url</option>
                        }
                    </select>
                    <button id="connect-target" class="btn btn-default"><i class="fa fa-power-off" aria-hidden="true"></i></button>
                    <div class="target-action-buttons">
                        <div class="target-button add"><span class="glyphicon glyphicon-plus"></span></div>
                        <div class="target-button edit" data-edit-url=""><span class="glyphicon glyphicon-pencil"></span></></div>
                        <div class="target-button delete"><span class="glyphicon glyphicon-remove"></span></div>
                    </div>
                    <div class="delete-popup">
                        <div>Are you sure you want to delete the sitesync target along with the history?</div>
                        <div class="btn btn-yes">Yes</div>
                        <div class="btn btn-no">No</div>
                    </div>
                    <div class="create-target-form" style="display: none;">
                        @await Html.PartialAsync("CreateTargetPartial")
                    </div>
                    <div class="edit-target-form" style="display: none;">
                        @await Html.PartialAsync("EditTargetPartial")
                    </div>

                </div>
            </div>

        </div>
        <div class="sitesync-items-section row">
            <hr>
            <h2>2.SiteSync</h2>
            <div class="col-md-4 col-md site-sync-items-container source">
                <h4 class="centered site-sync-container-titles">Source</h4>
                <div id="source-container" class="inner-items-container">
                </div>
            </div>
            <div class="col-md-4 site-sync-items-container items">
                <h4 class="site-sync-container-titles">Items to be pushed</h4>
                <div id="staged-container" class="inner-items-container">

                </div>
            </div>
            <div class="col-md-4 site-sync-items-container destination">
                <h4 class="centered site-sync-container-titles">Destination</h4>
                <div id="destination-container" class="inner-items-container">

                </div>
            </div>
        </div>
        <div class="row dependencies">
            <div>
                <div class="question-mark">
                    ?<div class="dependencies-tooltip">
                        If you would like to maintain the same visual and functional presentation as on the source environment, please, make sure that you select "Yes" and sync the dependencies.
                        Selecting "No" will copy only the selected files.
                    </div>
                </div>Copy dependencies

                @*<a href="#" class="btn">Yes</a> <a href="#" class="btn">No</a>*@


                <label><input type="radio" name="dependencies" class="btn-dependencies">Yes</label>

                <label><input type="radio" name="dependencies" class="btn-dependencies">No</label>



            </div>
        </div>
        <div class="row revision-history-wrapper">
            <h2>3. Click the sync button to start syncing.</h2>
            <button id="history-button" class="btn btn-default">History</button>
        </div>
        <div class="sync-button-wrapper">
            <button id="site-sync-button" class="btn btn-default">Sync</button>
        </div>
        <div class="row history-data">
            <div class="row category-titles">
                <div class="col col-lg-2"> Status </div>
                <div class="col col-lg-2"> Origin Site </div>
                <div class="col col-lg-2"> Target Site </div>
                <div class="col col-lg-2"> Origin User Id </div>
                <div class="col col-lg-2"> Date Created </div>
                <div class="col col-lg-2"></div>
            </div>
            <div class="history-content-results"></div>
        </div>
    </div>
<div id="site-sync-alert" class=""></div>
</div>


@section Scripts {
    <script src="~/js/modules/utils.js"></script>
    <script src="~/lib/signalr/dist/browser/signalr.js"></script>
    <script src="~/js/sitetriks/sitesync.js"></script>
    <script src="~/js/sitetriks/sitesync-model.js"></script>
    <script src="~/js/sitetriks/sitesync-core.js"></script>
    <script>
        (function() {
            var a = siteSyncModel;
            let connectToTargetUrl = '@Url.Action("ConnectToTarget", "SiteSync")';
            let getDisplayNamesUrl = '@Url.Action("GetDisplayNames", "SiteSync")';
            let postSyncUrl = '@Url.Action("SyncWithDependencies","SiteSync")';
            let getByDisplayNameUrl = '@Url.Action("GetByDisplayName", "SiteSync")';
            let getByDisplayNameTargetUrl = '@Url.Action("GetByDisplayNameDestinationSite", "SiteSync")';

            siteSyncCore.init(getDisplayNamesUrl,
            getByDisplayNameUrl,
             getByDisplayNameTargetUrl);

            siteSyncModule.init(siteSyncModel, siteSyncCore, connectToTargetUrl, postSyncUrl);


        })();
    </script>
}