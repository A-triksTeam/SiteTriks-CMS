@model SiteTriks.ECommerseModule.Models.PhysicalLocations.CreatePhysicalLocationViewModel

@{
    ViewBag.Title = "Create Physical Location";
}

<div class="backend-wrapper">
    @using (Html.BeginForm("Create", "PhysicalLocations", FormMethod.Post, new { id = "create-physical-location-form" }))
    {
        <div class="fixed-top-2">
            @await Html.PartialAsync("~/Areas/SiteTriks/Views/Shared/SecondNavHeader.cshtml")
            <a href="@Url.Action("Details", "StoreManager", new { id = Model.StoreId })" class="btn-nav-2"><span class="st-icon-return-to-list"></span>Cancel</a>
            <button type="submit" class="btn-nav-2">Save & Exit</button>
        </div>

        <div class="page-properties">
            <hr />
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => Model.StoreId)

            <div class="form-group row description-row">
                @Html.LabelFor(m => Model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(m => Model.Name, new { htmlAttributes = new { @class = "form-control title-field inline-block" } })
                    @Html.ValidationMessageFor(m => Model.Name, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row description-row">
                @Html.LabelFor(m => Model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(m => Model.Address, new { htmlAttributes = new { @class = "form-control title-field inline-block" } })
                    @Html.ValidationMessageFor(m => Model.Address, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row description-row">
                @Html.LabelFor(m => Model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(m => Model.Location, new { htmlAttributes = new { @class = "form-control title-field inline-block" } })
                    @Html.ValidationMessageFor(m => Model.Location, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    }
</div>
