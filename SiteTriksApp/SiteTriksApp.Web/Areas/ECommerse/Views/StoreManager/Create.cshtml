@model SiteTriks.ECommerseModule.Models.CreateStoreViewModel

@{
    ViewBag.Title = "CreateStore";
}

<div class="backend-wrapper">
    @using (Html.BeginForm("Create", "StoreManager", FormMethod.Post, new { id = "create-store-form" }))
    {
        <div class="fixed-top-2">
            @await Html.PartialAsync("~/Areas/SiteTriks/Views/Shared/SecondNavHeader.cshtml")
            <a href="@Url.Action("Index")" class="btn-nav-2"><span class="st-icon-return-to-list"></span>Cancel</a>
            <button type="submit" class="btn-nav-2">Save & Exit</button>
        </div>

        <div class="page-properties">
            <hr />
            @Html.AntiForgeryToken()
            <div class="form-group row description-row">
                @Html.LabelFor(m => Model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(m => Model.Title, new { htmlAttributes = new { @class = "form-control title-field inline-block validate", data_validation_type = "required length", data_min = "3" } })
                    @Html.ValidationMessageFor(m => Model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row description-row">
                @Html.LabelFor(m => Model.Url, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(m => Model.Url, new { htmlAttributes = new { @class = "form-control url-field inline-block validate", data_validation_type = "required length", data_min = "3" } })
                    @Html.ValidationMessageFor(m => Model.Url, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    }
</div>

@section scripts{
    <script type="text/javascript" src="~/js/validator.js"></script>
    <script type="text/javascript" src="~/js/sitetriks/storemanager.js"></script>
    <script type="text/javascript">
        (function () {
            let validateUrlLink = '@Url.Action("ValidateUrl", "Files", new { area = "sitetriks" })';
            let isNameAvailableLink = '@Url.Action("IsNameAvaliable")';

            createStore(validateUrlLink, isNameAvailableLink);
        })();
    </script>
}
