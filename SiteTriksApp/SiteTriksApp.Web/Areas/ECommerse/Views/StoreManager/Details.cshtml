@model SiteTriks.ECommerseModule.Models.StoreDetailsViewModel

@{
    ViewBag.Title = "Details";
}

@section styles{
    <style>
        .store-section {
            display: none;
        }

            .store-section.active {
                display: inherit;
            }

        .store-sections-nav > li {
            cursor: pointer;
        }
    </style>
}

<div class="fixed-top-2">
    @await Html.PartialAsync("~/Areas/SiteTriks/Views/Shared/SecondNavHeader.cshtml")
    <a href="@Url.Action("Index")" class="btn-nav-2"><span class="st-icon-return-to-list"></span>Cancel</a>
</div>

<div class="backend-wrapper">
    <ul class="nav nav-tabs store-sections-nav unselectable">
        <li role="presentation" data-section="category-section"><a>Categories</a></li>
        <li role="presentation" data-section="physical-location-section"><a>Physical Locations</a></li>
        <li role="presentation" data-section="payment-option-section"><a>Payment Options</a></li>
        <li role="presentation" data-section="store-items-section"><a>Store Items</a></li>
        <li role="presentation" data-section="extra-fields-section"><a>Extra Fields</a></li>
        <li role="presentation" data-section="skins-section"><a>Skins</a></li>
    </ul>

    <div class="category-section store-section">
        <a href="@Url.Action("Create", "CategoryManager", new { storeId = Model.Id })" class="btn btn-default">Create Category</a>
        <div class="category-grid"></div>
    </div>

    <div class="physical-location-section store-section">
        <a href="@Url.Action("Create", "PhysicalLocations", new { storeId = Model.Id })" class="btn btn-default">Create Physical Location</a>
        <div class="physical-location-grid"></div>
    </div>

    <div class="payment-option-section store-section">
        <div>
            @Html.ListBoxFor(model => Model.PaymentTypes, Model.AvailableTypes.Select(t => new SelectListItem(t, t)), new { @class = "form-control", id = "multiselect-payment-types" })

            <a id="update-types" class="btn btn-default">Save</a>
        </div>
    </div>

    <div class="store-items-section store-section">
        <a href="@Url.Action("Create", "StoreItemManager", new { storeId = Model.Id })" class="btn btn-default">Create Item</a>
        <div class="store-items-grid"></div>
    </div>

    <div class="extra-fields-section store-section">
        <a href="@Url.Action("Create", "StoreItemExtraFieldsConfig", new { storeId = Model.Id })" class="btn btn-default">Create Extra Field</a>
        <div class="extra-fields-grid"></div>
    </div>

    <div class="skins-section store-section">
        <a href="@Url.Action("Create", "StoreSkinManager", new { storeId = Model.Id })" class="btn btn-default">Create Skin</a>
        <div class="skins-grid"></div>
    </div>
</div>

@section scripts{
    <script type="text/javascript" src="~/js/validator.js"></script>
    <script type="text/javascript" src="~/js/sitetriks/storemanager.js"></script>
    <script type="text/javascript" src="~/js/multiselect-setup.js"></script>
    <script type="text/javascript">
        (function () {
            (function () {
                // categories grid
                var grid = Grid();
                var data = { link: '/ecommerse/categorymanager/grid?storeId=@Model.Id', serverSide: false };
                var columns = [{
                    name: 'id',
                    title: '',
                    type: 'checkbox',
                    size: 1
                },
                {
                    name: 'name',
                    title: 'Name',
                    type: 'string',
                    filter: true,
                    sort: true,
                    extraFields: ['id'],
                    size: 2,
                    headerTemplate: '<b>#item#</b>',
                    contentTemplate: '<a href="/ecommerse/categorymanager/edit?id=#item0#">#item#</a>'
                }];

                let buttons = [{
                    title: 'Delete',
                    postUrl: '/ecommerse/categorymanager/delete',
                    type: 'danger'
                }];

                var config = grid.build(columns, buttons, grid.defaultPager, data);
                grid.init('.category-grid', config);
            })();

            //-------------------------------------------------------------------------------------------
            // toggle sections
            $('.store-sections-nav li').on('click', toggleStoreSection);
            $('.store-sections-nav li').first().trigger('click');

            function toggleStoreSection(ev) {
                let $target = $(ev.target);
                if ($target.is('a')) {
                    $target = $target.parent();
                }

                $('.store-sections-nav li.active').each(function (_, element) {
                    $(element).removeClass('active');
                });

                $('.store-section.active').each(function (_, element) {
                    $(element).removeClass('active');
                });

                $target.addClass('active');
                $('.' + $target.attr('data-section')).addClass('active');
            }

            //-------------------------------------------------------------------------------------------

            (function () {
                // physical location grid
                var grid = Grid();
                var data = { link: '/ecommerse/physicallocations/grid?storeId=@Model.Id', serverSide: false };
                var columns = [{
                    name: 'id',
                    title: '',
                    type: 'checkbox',
                    size: 1
                },
                {
                    name: 'name',
                    title: 'Name',
                    type: 'string',
                    filter: true,
                    sort: true,
                    extraFields: ['id'],
                    size: 2,
                    headerTemplate: '<b>#item#</b>', // #item# is the placeholder for the content
                    contentTemplate: '<a href="/ecommerse/physicallocations/edit?id=#item0#">#item#</a>'
                },
                {
                    name: 'address',
                    title: 'Address',
                    type: 'string',
                    filter: true,
                    sort: true,
                    size: 2,
                    headerTemplate: '<b>#item#</b>'
                },
                {
                    name: 'location',
                    title: 'Location',
                    type: 'string',
                    filter: true,
                    sort: true,
                    size: 2,
                    headerTemplate: '<b>#item#</b>'
                }];

                let buttons = [{
                    title: 'Delete',
                    postUrl: '/ecommerse/physicallocations/delete',
                    type: 'danger'
                }];

                var config = grid.build(columns, buttons, grid.defaultPager, data);
                grid.init('.physical-location-grid', config);
            })();

            //-------------------------------------------------------------------------------------------
            // payment options section
            Multiselect.Setup('multiselect-payment-types', function (option, checked, select) { });

            $('#update-types').on('click', function (ev) {
                let types = [];
                let storeId = '@Model.Id';
                let postUrl = '@Url.Action("SavePaymentTypes")';
                $('#multiselect-payment-types').parent().find('input[type="checkbox"]').each(function (_, element) {
                    let $element = $(element);
                    if ($element.is(':checked')) {
                        types.push($element.val());
                    }
                });

                Loader.show('#fff');
                Data.postJson({ url: postUrl, data: { types, storeId } }).then(function (res) {
                    console.log(res);
                    Loader.hide();
                });
            });

            //-------------------------------------------------------------------------------------------
            // extra fields
            (function () {
                var grid = Grid();
                var data = { link: '/ecommerse/StoreItemExtraFieldsConfig/grid?storeId=@Model.Id', serverSide: false };
                var columns = [{
                    name: 'id',
                    title: '',
                    type: 'checkbox',
                    size: 1
                },
                {
                    name: 'name',
                    title: 'Name',
                    type: 'string',
                    filter: true,
                    sort: true,
                    extraFields: ['id'],
                    size: 2,
                    headerTemplate: '<b>#item#</b>' // #item# is the placeholder for the content
                    //contentTemplate: '<a href="/ecommerse/storemanager/details?id=#item0#">#item#</a>'
                },
                {
                    name: 'type',
                    title: 'Type',
                    filter: true,
                    sort: true,
                    size: 2,
                    headerTemplate: '<b>#item#</b>'
                }];

                let buttons = [{
                    title: 'Delete',
                    postUrl: '/ecommerse/StoreItemExtraFieldsConfig/delete',
                    type: 'danger'
                }];

                var config = grid.build(columns, buttons, grid.defaultPager, data);
                grid.init('.extra-fields-grid', config);
            })();

            //--------------------------------------------------------------------------------------
            // store items
            (function () {
                var grid = Grid();
                var data = { link: '/ecommerse/storeitemmanager/grid?storeId=@Model.Id', serverSide: false };
                var columns = [{
                    name: 'id',
                    title: '',
                    type: 'checkbox',
                    size: 1
                },
                {
                    name: 'title',
                    title: 'Title',
                    type: 'string',
                    filter: true,
                    sort: true,
                    extraFields: ['id'],
                    size: 2,
                    headerTemplate: '<b>#item#</b>',
                    contentTemplate: '<a href="/ecommerse/storeitemmanager/edit?id=#item0#">#item#</a>'
                },
                {
                    name: 'isOnSale',
                    title: 'On Sale',
                    type: 'bool',
                    filter: true,
                    sort: true,
                    size: 2,
                    headerTemplate: '<b>#item#</b>',
                    trueTemplate: 'yes',
                    falseTemplate: 'no'
                },
                {
                    name: 'price',
                    title: 'Price',
                    type: 'number',
                    filter: true,
                    sort: true,
                    size: 2,
                    headerTemplate: '<b>#item#</b>',
                    contentTemplate: '<span>#item#</span>'
                },
                {
                    name: 'remainingQuantity',
                    title: 'Remaining Quantity',
                    type: 'number',
                    filter: true,
                    sort: true,
                    size: 2,
                    headerTemplate: '<b>#item#</b>',
                    contentTemplate: '<span>#item#</span>'
                }];

                let buttons = [{
                    title: 'Delete',
                    postUrl: '/ecommerse/storeitemmanager/delete',
                    type: 'danger'
                }];

                var config = grid.build(columns, buttons, grid.defaultPager, data);
                grid.init('.store-items-grid', config);
            })();

            //--------------------------------------------------------------------------------------
            // store skins
            (function () {
                var grid = Grid();
                var data = { link: '/ecommerse/storeskinmanager/grid?storeId=@Model.Id', serverSide: false };
                var columns = [{
                    name: 'id',
                    title: '',
                    type: 'checkbox',
                    size: 1
                },
                {
                    name: 'status',
                    title: 'Status',
                    type: 'string',
                    filter: true,
                    sort: true,
                    size: 2,
                    headerTemplate: '<b>#item#</b>'
                },
                {
                    name: 'id',
                    title: 'Grid Skin',
                    type: 'string',
                    size: 1,
                    headerTemplate: '<b>#item#</b>',
                    contentTemplate: '<a class="btn btn-sm btn-backend" href="/ecommerse/storeskinmanager/gridskin?id=#item#">Manage Grid Skin</a>'
                },
                {
                    name: 'id',
                    title: 'Preview Skin',
                    type: 'string',
                    size: 1,
                    headerTemplate: '<b>#item#</b>',
                    contentTemplate: '<a class="btn btn-sm btn-backend" href="/ecommerse/storeskinmanager/previewskin?id=#item#">Manage Preview Skin</a>'
                },
                {
                    name: 'id',
                    title: 'Full Page Skin',
                    type: 'string',
                    size: 1,
                    headerTemplate: '<b>#item#</b>',
                    contentTemplate: '<a class="btn btn-sm btn-backend" href="/ecommerse/storeskinmanager/fullpageskin?id=#item#">Manage Full Page Skin</a>'
                },
                {
                    name: 'isCompleted',
                    title: '',
                    type: 'bool',
                    size: 1,
                    extraFields: ['id'],
                    headerTemplate: '<b>#item#</b>',
                    trueTemplate: '<a class="btn btn-sm btn-backend select-skin" data-id="#item0#">Select Skin</a>',
                    falseTemplate: ''
                }];

                let buttons = [{
                    title: 'Delete',
                    postUrl: '/ecommerse/storeskinmanager/delete',
                    type: 'danger'
                }];

                var config = grid.build(columns, buttons, grid.defaultPager, data);
                grid.init('.skins-grid', config);

                $('body').on('click', '.select-skin', function (ev) {
                    let $target = $(ev.target);
                    let id = $target.attr('data-id');

                    Data.getJson({ url: `/ecommerse/storeskinmanager/selectskin?id=${id}&storeId=${'@Model.Id'}` }).then(function (res) {
                        if (res.success) {
                            document.dispatchEvent(new CustomEvent('refreshGrid', { bubbles: true, detail: { selector: '.skins-grid' } }));
                        }
                    });
                });
            })();
        })();
    </script>
}
