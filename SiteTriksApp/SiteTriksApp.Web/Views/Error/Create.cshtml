@model SiteTriksApp.Web.Models.ErrorPages.CreateErrorPageViewModel

@{ 
    ViewBag.Title = "Create";
}

<div class="backend-wrapper">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="fixed-top-2">
            @*@await Html.PartialAsync("SecondNavHeader")*@

            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })
            <input type="submit" value="Create" class="btn btn-success" />
        </div>

        <div class="form-horizontal">
            <h4>CreateErrorPageViewModel</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.StatusCode, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.StatusCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StatusCode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PageMetaId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.PageMetaId, new SelectList(Model.Pages, "Id", "Title"), "-- Select Error Page --", new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PageMetaId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    }
</div>
