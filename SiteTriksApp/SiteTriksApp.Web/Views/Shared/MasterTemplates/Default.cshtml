@model SiteTriks.Services.Models.Pages.DisplayPageServiceModel

@{
    string lang = ViewData["Lang"].ToString();
    bool isPreview = ViewData["Preview"].ToString() == "preview";
    bool isPartial = ViewData["Preview"].ToString() == "partial";
    if (isPreview || isPartial)
    {
        Layout = null;
    }
    else
    {
        Layout = "~/Views/Shared/_FrontEndLayout.cshtml";
        ViewBag.Title = Model.Title;
    }
}

@{ var css = Model.Contents.Where(c => c.Placeholder == "css").OrderBy(c => c.Order).ToArray(); }

@section styles {
    @if (!isPreview)
    {
        foreach (var item in css)
        {
            @await Component.InvokeAsync("RenderWidget", new { content = item, preview = "", lang })
        }
    }
}

<div class="template-content">
    <input name="SEOKeyword" value="@Model.SEOKeyword" type="hidden" />
    @if (isPreview || isPartial)
    {

        foreach (var item in css)
        {
            @await Component.InvokeAsync("RenderWidget", new { content = item, preview = isPreview ? "preview" : "", lang })
        }
        <div class="placeholder" data-placeholder="css"></div>
    }

    <div class="conntent-wrapper main-content">
        <div class="row-content">
            <div data-placeholder="main" class="placeholder row content-placeholder no-margin row-placeholder @(isPreview ? "preview-placeholder static" : "")">
                @{ var main = Model.Contents.Where(c => c.Placeholder == "main").OrderBy(c => c.Order).ToArray(); }
                @foreach (var item in main)
                {
                    @await Component.InvokeAsync("RenderWidget", new { content = item, preview = isPreview ? "preview" : "", lang });
                }
            </div>
        </div>
    </div>

    @if (isPreview || isPartial)
    {
        var javascript = Model.Contents.Where(c => c.Placeholder == "javascript").OrderBy(c => c.Order).ToArray();
        foreach (var item in javascript)
        {
            @await Component.InvokeAsync("RenderWidget", new { content = item, preview = isPreview ? "preview" : "", lang })
        }
        <div class="placeholder" data-placeholder="javascript"></div>
    }
</div>

@section scripts {
    @if (!isPreview || isPartial)
    {
        var javascript = Model.Contents.Where(c => c.Placeholder == "javascript").OrderBy(c => c.Order).ToArray();
        foreach (var item in javascript)
        {
            @await Component.InvokeAsync("RenderWidget", new { content = item, preview = "", lang })
        }
    }
}